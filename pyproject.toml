[tool.poetry]
name = "nl-open-data"
version = "0.1.0"
description = "Datawarehouse of various Dutch open data sources with focus on healthcare and public domain."
authors = ["Daniel Kapitan <daniel@kapitan.net>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.8"
click = "^7.1.2"
google-auth = "^1.19.2"
google-cloud-core = "^1.3.0"
google-cloud-bigquery = "^1.26.1"
google-cloud-storage = "^1.30.0"
prefect = "^0.14.0"
requests = "^2.24.0"
pyarrow = "^2.0.0"
bunch = "^1.0.1"
lxml = "^4.5.2"
xmltodict = "^0.12.0"
# statline_bq = {git = "https://github.com/dataverbinders/statline-bq.git", branch = "logging"} # takes main branch of statline-bq from github
statline_bq = {path = "../statline-bq", develop = true} # takes statline-bq from a local path
# statline_bq = {path = "/home/amitgalmail/statline-bq", develop = true} # takes statline-bq from the VM's local path
pandas = "^1.1.5"
python-box = "^5.2.0"

[tool.poetry.dev-dependencies]
black = "^19.10b0"
flake8 = "^3.8.3"
ipykernel = "^5.3.4"
ipython = "^7.16.1"
jedi = "^0.17.2"
pdoc3 = "^0.8.4"
pytest = "^5.2"
prefect = {extras = ["viz"], version = "^0.14.0"}
dataclasses-json = "^0.5.2"


[tool.dephell.main]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "setuppy", path = "setup.py"}

[tool.dephell.requirements]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "pip", path = "requirements.txt"}

[tool.dephell.conda]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "conda", path = "environment.yaml"}

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

